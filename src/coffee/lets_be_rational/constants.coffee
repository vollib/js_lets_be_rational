class constants

	_DBL_EPSILON = 2.2204460492503131e-16
	_DBL_MIN = 2.2250738585072014e-308
	_DBL_MAX = 1.7976931348623157e+308
	_SQRT_DBL_EPSILON = Math.sqrt(_DBL_EPSILON)
	_FOURTH_ROOT_DBL_EPSILON = Math.sqrt(_SQRT_DBL_EPSILON)
	_EIGHTH_ROOT_DBL_EPSILON = Math.sqrt(_FOURTH_ROOT_DBL_EPSILON)

	DBL_EPSILON: _DBL_EPSILON
	DBL_MIN: _DBL_MIN
	DBL_MAX: _DBL_MAX

	SQRT_DBL_EPSILON: _SQRT_DBL_EPSILON
	FOURTH_ROOT_DBL_EPSILON: _FOURTH_ROOT_DBL_EPSILON
	EIGHTH_ROOT_DBL_EPSILON: _EIGHTH_ROOT_DBL_EPSILON
	SIXTEENTH_ROOT_DBL_EPSILON: Math.sqrt(_EIGHTH_ROOT_DBL_EPSILON)
	SQRT_DBL_MIN: Math.sqrt(_DBL_MIN)
	SQRT_DBL_MAX: Math.sqrt(_DBL_MAX)

	# Set this to 0 if you want positive results for (positive) denormalized inputs, else to DBL_MIN.
	# Note that you cannot achieve full machine accuracy from denormalized inputs!
	DENORMALIZATION_CUTOFF: 0

	VOLATILITY_VALUE_TO_SIGNAL_PRICE_IS_BELOW_INTRINSIC: -_DBL_MAX
	VOLATILITY_VALUE_TO_SIGNAL_PRICE_IS_ABOVE_MAXIMUM: _DBL_MAX

	ONE_OVER_SQRT_TWO: 0.7071067811865475244008443621048490392848359376887
	ONE_OVER_SQRT_TWO_PI: 0.3989422804014326779399460599343818684758586311649
	SQRT_TWO_PI: 2.506628274631000502415765284811045253006986740610

	TWO_PI: 6.283185307179586476925286766559005768394338798750
	SQRT_PI_OVER_TWO: 1.253314137315500251207882642405522626503493370305  # Math.sqrt(Math.PI/2) to avoid misinterpretation.
	SQRT_THREE: 1.732050807568877293527446341505872366942805253810
	SQRT_ONE_OVER_THREE: 0.577350269189625764509148780501957455647601751270
	TWO_PI_OVER_SQRT_TWENTY_SEVEN: 1.209199576156145233729385505094770488189377498728  # 2*Math.PI/Math.sqrt(27)
	PI_OVER_SIX: 0.523598775598298873077107230546583814032861566563


if module?
    module.exports = new constants()
window.constants = new constants()
